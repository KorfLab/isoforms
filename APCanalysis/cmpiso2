#!/usr/bin/env python3

import argparse
import os
import isoform2
import csv

parser = argparse.ArgumentParser()
parser.add_argument('APCgen_gffs', type=str, metavar='<directory>',
    help='directory with APC generated gff files')
parser.add_argument('WB_gffs', type=str, metavar='<directory>',
    help='directory with WormBase gff files')

args = parser.parse_args()

gffPaths = {}
for fname in os.listdir(args.APCgen_gffs):
    if fname.endswith('.gff'):
        gID = fname.split('.')[1]
        gffPaths[gID] = [args.APCgen_gffs + fname]

for fname in os.listdir(args.WB_gffs):
    if fname.endswith('.gff3'):
        gID = fname.split('.')[1]
        gffPaths[gID].append(args.WB_gffs + fname)

comparisons = {}
for g in gffPaths:
    i1 = isoform2.get_introns(gffPaths[g][0])
    i2 = isoform2.get_introns(gffPaths[g][1])
    dist, details = isoform2.expdiff(i1, i2)
    comparisons[g] = dist
            
ranked = dict(sorted(comparisons.items(), key=lambda item: item[1]))

# 1_598 2.0000
'''
for r in ranked:
    print(r, ranked[r])

with open('ranked_dist.csv', 'w') as csvfile:
    writer = csv.writer(csvfile, delimiter=',')
    for r in ranked:
        writer.writerow([f'{r}', f'{ranked[r]}'])
'''

# get intron parent transcripts and intron scores
wbintron_info = {}
for gID in gffPaths:
    parents = {}
    iscores = {}
    with open(gffPaths[gID][1], 'r') as file:
        for line in file.readlines():
            line = line.rstrip()
            line = line.split('\t')
            if line[1] == 'RNASeq_splice':
                score = line[5]
                intron = (line[3], line[4])
                iscores[intron] = score
            if line[1] == 'WormBase' and line[2] == 'intron':
                parent = f'{line[0]}_{line[8]}'
                intron = (line[3], line[4])
                if parent not in parents:
                    parents[parent] = [intron]
                else:
                    parents[parent].append(intron)
    wbintron_info[gID] = {'parents': parents, 'iscores': iscores}

print(wbintron_info)
print('')
# get WB annotated isoform by picking parent transcript with higher score
for gID in wbintron_info:
    WBisos = {}
    print('')
    print(gID, '###$$')
    total_score = 0
    iso = []
    for parent in wbintron_info[gID]['parents']:
        print(parent)
        print(wbintron_info[gID]['parents'][parent], 'oifhjaodif')
        for intron in wbintron_info[gID]['parents'][parent]:
            print(intron, wbintron_info[gID]['iscores'][intron], '###$##')
            iso.append(intron)
            total_score += float(wbintron_info[gID]['iscores'][intron])
    print(total_score)
    print(iso)

# does the same intron have two different parents?
# yes the same intron has two different parent transcripts
# this is normal
# but you total score isn't correct yet
# problem: 2_1 has the same intron twice

#print(max(WBisos), WBisos[max(WBisos)])

print('#####')
'''
count = 1
APCisos = {}
shortfile = 'shortAPC.gff'
#with open(gffPaths['2_1'][0], 'r') as file:
with open(shortfile, 'r') as file:
    for line in file.readlines():
        line = line.rstrip()
        line = line.split('\t')
        if line[0] == '': 
            APCisos[count] = []
            count += 1
        elif count > 1:
            if line[2] == 'intron':
                intron = (line[3], line[4]) 
                APCisos[count-1].append(intron)

for iso in APCisos:
    print(iso, APCisos[iso])
    print(WBisos[max(WBisos)][1])
    if APCisos[iso] == WBisos[max(WBisos)][1]: 
        print(iso, 'same')
'''

print('##############')
# is top isos same as WB iso?

# need to format an output file

# geneid, mdist, isomatchwb
# ch.2_1, 0.01, 1




