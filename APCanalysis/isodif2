#!/usr/bin/env python3

import argparse
import os
import isoform2
import math
import csv

parser = argparse.ArgumentParser(
	description='Test different distance equations on APC results')
	
parser.add_argument('apcgen_gffs', help='APC generated gff files')
parser.add_argument('smallgenes', 
	help='Directory with WormBase gff/fasta files')

args = parser.parse_args()

apc = {}
for file in os.listdir(args.apcgen_gffs):
	gid = file.split('.')[1]
	if args.apcgen_gffs.endswith('/'):
		apc[gid] = f'{args.apcgen_gffs}{file}'
	else:
		apc[gid] = f'{args.apcgen_gffs}/{file}'

wb = {}
for file in os.listdir(args.smallgenes):
	gid = file.split('.')[1]
	if file.endswith('.gff3'):
		if args.smallgenes.endswith('/'):
			wb[gid] = f'{args.smallgenes}{file}'
		else:
			wb[gid] = f'{args.smallgenes}/{file}'
	
genes = {}
for a in apc:
	wbi = isoform2.get_introns(wb[a])
	apci = isoform2.get_introns(apc[a])
	genes[a] = (wbi, apci)

# use wormbase as reference, so you don't miss/make up introns
def intsort(i1, i2):
	
	sdi1 = {}
	for i in sorted(i1, key=lambda i: float(i1[i]), reverse=True):
		sdi1[i] = i1[i]
		
	sdi2 = {}
	for i in sorted(i2, key=lambda i: float(i2[i]), reverse=True):
		sdi2[i] = i2[i]
	
	for i in sdi1:
		if i not in sdi2: sdi2[i] = 0
	
	for i in sdi2:
		if i not in sdi1: sdi1[i] = 0
	
	return sdi1, sdi2

same_ints = {}
dif_ints = {}
for g in genes:
	si1, si2 = intsort(genes[g][0], genes[g][1])
	for i, j in zip(si1, si2):
		if i == j: 
			if g not in same_ints:
				same_ints[g] = 1
			else:
				same_ints[g] += 1
		if i != j:
			if g not in dif_ints:
				dif_ints[g] = 1
			else:
				dif_ints[g] += 1

#print(dif_ints)

# some dif ints to look at:
# 1_134, 2_315, 3_6

si1, si2 = intsort(genes['2_315'][0], genes['2_315'][1])
c1 = 0
c2 = 0
for i, j in zip(si1, si2):
	c1 += 1
	if i == j: 
		print(i, j, si1[i], si2[j], 'same')
		c2 += 1
	if i != j:
		print(i, j, si1[i], si2[j], 'dif')

print(c1, c2)

print('#####')

introns = {}
for i in genes['2_315'][0]:
	if i not in genes['2_315'][1]:
		introns[i] 

print('#####')
	
i1 = genes['2_315'][0]
i2 = genes['2_315'][1]

new = {}
for i in i1:
	if i not in i2:
		i2[i] = 0
		
for i in i2:
	if i not in i1:
		i1[i] = 0
		
for i in i2:
	print(i, i2[i])
print('#####')
for i in i1:
	print(i, i1[i])
	
si1 = sorted(i1, key=lambda i: float(i1[i]), reverse=True)
si2 = sorted(i2, key=lambda i: float(i1[i]), reverse=True)

for i, j in zip(si1, si2):
	print(i, j)















